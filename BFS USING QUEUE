/*B F S TRAVERSAL USING QUEUE  IN GRAPH */

#include<bits/stdc++.h>
using namespace std;

void bfs(vector<vector<int>> & adjlist,int startnode,vector<bool>& visited)
{
    queue<int> q;
    q.push(startnode);
    visited[startnode]=true;

    //while(!q.empty())
    while(q.empty()!=true)
    {
        int currentnode= q.front();
        cout<<currentnode<<" ";
        q.pop();

        for(int neighbour : adjlist[currentnode])
        {
            if(visited[neighbour]!=true)
            {
                visited[neighbour]=true;
                q.push(neighbour);
            }

        }
    }
}
void addedges(vector<vector<int>> & adjlist, int u ,int v)
{
    adjlist[u].push_back(v);
}
int main()
{
    int nodes;
    cout<<"enter no. of nodes u needed"<<endl; // take 5 nodes as an example
    cin>>nodes;

    vector<vector<int>> adjlist(nodes);

    addedges(adjlist , 0, 1);
    addedges(adjlist , 0, 2);
    addedges(adjlist , 1, 3);
    addedges(adjlist , 2, 4);
    addedges(adjlist , 3, 4);

    //vector<bool> visited(nodes,false);
    vector<bool> visited(nodes);
    visited[nodes]=false;

    bfs(adjlist, 0, visited);
}
